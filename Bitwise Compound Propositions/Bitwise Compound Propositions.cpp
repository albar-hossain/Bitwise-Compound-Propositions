#include <iostream>
#include <stdlib.h>
#include <windows.h>
#include <cctype>
#include <string>
using namespace std;

void bitwiseOr(string p, string q) {
	int p_size = p.size();
	int q_size = q.size();
	system("CLS");
	cout << "\nBitwise truth table for P OR Q: " << endl;
	cout << "P	Q	P | Q" << endl;
	cout << "--------------------------" << endl;
	for (int i = 0; i < p_size; i++)
	{
		cout << p[i] << "	" << q[i] << "	  " << (char)(p[i] | q[i]) << endl;
		cout << "--------------------------" << endl;
	}
}

void bitwiseAnd(string p, string q) {
	int p_size = p.size();
	int q_size = q.size();
	system("CLS");
	cout << "\nBitwise truth table for P AND Q: " << endl;
	cout << "P	Q	P & Q" << endl;
	cout << "--------------------------" << endl;
	for (int i = 0; i < p_size; i++)
	{
		cout << p[i] << "	" << q[i] << "	  " << (char)(p[i] & q[i]) << endl;
		cout << "--------------------------" << endl;
	}
}

void bitwiseXor(string p, string q) {
	int p_size = p.size();
	int q_size = q.size();
	system("CLS");
	cout << "\nBitwise truth table for P XOR Q: " << endl;
	cout << "P	Q	P ^ Q" << endl;
	cout << "--------------------------" << endl;
	for (int i = 0; i < p_size; i++)
	{
		cout << p[i] << "	" << q[i] << "	  " << (p[i] ^ q[i]) << endl;
		cout << "--------------------------" << endl;
	}
}

void greet() {
	cout << R"(

  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___
 |___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___|
  _                __      __     _                        _____       ___  _  _            _            _____            _    _      _____       _     _         ___                             _                             _
 | |               \ \    / /___ | | __  ___  _ __   ___  |_   _|___  | _ )(_)| |_ __ __ __(_) ___ ___  |_   _|_ _  _  _ | |_ | |_   |_   _|__ _ | |__ | | ___   / __| ___  _ _   ___  _ _  __ _ | |_  ___  _ _                | |
 | |                \ \/\/ // -_)| |/ _|/ _ \| '  \ / -_)   | | / _ \ | _ \| ||  _|\ V  V /| |(_-</ -_)   | | | '_|| || ||  _|| ' \    | | / _` || '_ \| |/ -_) | (_ |/ -_)| ' \ / -_)| '_|/ _` ||  _|/ _ \| '_|               | |
 | |                 \_/\_/ \___||_|\__|\___/|_|_|_|\___|   |_| \___/ |___/|_| \__| \_/\_/ |_|/__/\___|   |_| |_|   \_,_| \__||_||_|   |_| \__,_||_.__/|_|\___|  \___|\___||_||_|\___||_|  \__,_| \__|\___/|_|                 | |
 |_|                                                                                                                                                                                                                           |_|
  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___
 |___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___|

)" << "\n";
}

void bye() {
	cout << R"(

  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___
 |___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___|
  _               _____  _                 _    __   __           _         ___               _  _                               _
 | |             |_   _|| |_   __ _  _ _  | |__ \ \ / /___  _  _ | |       / __| ___  ___  __| || |__  _  _  ___                | |
 | |               | |  | ' \ / _` || ' \ | / /  \ V // _ \| || ||_|      | (_ |/ _ \/ _ \/ _` || '_ \| || |/ -_)               | |
 | |               |_|  |_||_|\__,_||_||_||_\_\   |_| \___/ \_,_|(_)       \___|\___/\___/\__,_||_.__/ \_, |\___|               | |
 |_|                                                                                                   |__/                     |_|
  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___  ___
 |___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___||___|

)" << "\n";
}

void display() {
	cout << R"(
  _     ___             __                    ___  _  _            _             ___   ___    ___                         _    _
 / |   | _ \ ___  _ _  / _| ___  _ _  _ __   | _ )(_)| |_ __ __ __(_) ___ ___   / _ \ | _ \  / _ \  _ __  ___  _ _  __ _ | |_ (_) ___  _ _
 | | _ |  _// -_)| '_||  _|/ _ \| '_|| '  \  | _ \| ||  _|\ V  V /| |(_-</ -_) | (_) ||   / | (_) || '_ \/ -_)| '_|/ _` ||  _|| |/ _ \| ' \  _
 |_|(_)|_|  \___||_|  |_|  \___/|_|  |_|_|_| |___/|_| \__| \_/\_/ |_|/__/\___|  \___/ |_|_\  \___/ | .__/\___||_|  \__,_| \__||_|\___/|_||_|(_)
                                                                                                   |_|
)" << "\n";
	cout << R"(
  ___     ___             __                    ___  _  _            _              _    _  _  ___     ___                         _    _
 |_  )   | _ \ ___  _ _  / _| ___  _ _  _ __   | _ )(_)| |_ __ __ __(_) ___ ___    /_\  | \| ||   \   / _ \  _ __  ___  _ _  __ _ | |_ (_) ___  _ _
  / /  _ |  _// -_)| '_||  _|/ _ \| '_|| '  \  | _ \| ||  _|\ V  V /| |(_-</ -_)  / _ \ | .` || |) | | (_) || '_ \/ -_)| '_|/ _` ||  _|| |/ _ \| ' \  _
 /___|(_)|_|  \___||_|  |_|  \___/|_|  |_|_|_| |___/|_| \__| \_/\_/ |_|/__/\___| /_/ \_\|_|\_||___/   \___/ | .__/\___||_|  \__,_| \__||_|\___/|_||_|(_)
                                                                                                            |_|
)" << "\n";
	cout << R"(
  ____    ___             __                    ___  _  _            _           __  __ ___   ___    ___                         _    _
 |__ /   | _ \ ___  _ _  / _| ___  _ _  _ __   | _ )(_)| |_ __ __ __(_) ___ ___  \ \/ // _ \ | _ \  / _ \  _ __  ___  _ _  __ _ | |_ (_) ___  _ _
  |_ \ _ |  _// -_)| '_||  _|/ _ \| '_|| '  \  | _ \| ||  _|\ V  V /| |(_-</ -_)  >  <| (_) ||   / | (_) || '_ \/ -_)| '_|/ _` ||  _|| |/ _ \| ' \  _
 |___/(_)|_|  \___||_|  |_|  \___/|_|  |_|_|_| |___/|_| \__| \_/\_/ |_|/__/\___| /_/\_\\___/ |_|_\  \___/ | .__/\___||_|  \__,_| \__||_|\___/|_||_|(_)
                                                                                                          |_|
)" << "\n";
	cout << R"(
  _ _    _   _           _        _          ___  _  _     ___  _         _              __   __      _
 | | |  | | | | _ __  __| | __ _ | |_  ___  | _ )(_)| |_  / __|| |_  _ _ (_) _ _   __ _  \ \ / /__ _ | | _  _  ___  ___
 |_  _|_| |_| || '_ \/ _` |/ _` ||  _|/ -_) | _ \| ||  _| \__ \|  _|| '_|| || ' \ / _` |  \ V // _` || || || |/ -_)(_-< _
   |_|(_)\___/ | .__/\__,_|\__,_| \__|\___| |___/|_| \__| |___/ \__||_|  |_||_||_|\__, |   \_/ \__,_||_| \_,_|\___|/__/(_)
               |_|                                                                |___/
)" << "\n";
	cout << R"(
  ___     ___       _  _
 | __|   | __|__ __(_)| |_
 |__ \ _ | _| \ \ /| ||  _| _
 |___/(_)|___|/_\_\|_| \__|(_)

)" << "\n";
	cout << endl;
	cout << "Choose an option (1-5): ";
}

void invalid() {
	cout << R"(
  ___                  _  _     _   ___       _           _    _
 |_ _| _ _ __ __ __ _ | |(_) __| | / __| ___ | | ___  __ | |_ (_) ___  _ _
  | | | ' \\ V // _` || || |/ _` | \__ \/ -_)| |/ -_)/ _||  _|| |/ _ \| ' \  _
 |___||_||_|\_/ \__,_||_||_|\__,_| |___/\___||_|\___|\__| \__||_|\___/|_||_|(_)

)" << "\n";
}

void getChoice() {
	cout << R"(
 __      __           _     _  __   __            _     _  _          _____        ___            _    _                 ___    ____   __ __ _  _ __
 \ \    / /___  _  _ | | __| | \ \ / /___  _  _  | |   (_)| |__ ___  |_   _|___   / __| ___  _ _ | |_ (_) _ _  _  _  ___|__ \  / /\ \ / // /| \| |\ \
  \ \/\/ // _ \| || || |/ _` |  \ V // _ \| || | | |__ | || / // -_)   | | / _ \ | (__ / _ \| ' \|  _|| || ' \| || |/ -_) /_/ | |  \ V // / | .` | | |
   \_/\_/ \___/ \_,_||_|\__,_|   |_| \___/ \_,_| |____||_||_\_\\___|   |_| \___/  \___|\___/|_||_|\__||_||_||_|\_,_|\___|(_)  | |   |_|/_/  |_|\_| | |
                                                                                                                               \_\                /_/
)" << "\n";
}

int main()
{
	ShowWindow(GetConsoleWindow(), SW_MAXIMIZE);
	char choice = 'y';
	int selection{};
	string p{}, q{};

	greet();
	cout << "Enter First Bit String: ";
	cin >> p;

	cout << "Enter Second Bit String: ";
	cin >> q;
	system("CLS");
	display();
	cin >> selection;
	do
	{
		if (selection == 1)
		{
			bitwiseOr(p, q);
			getChoice();
			cin >> choice;
			if (choice != 'n' && choice != 'N')
			{
				system("CLS");
				display();
				cin >> selection;
			}
		}
		else if (selection == 2)
		{
			bitwiseAnd(p, q);
			getChoice();
			cin >> choice;
			if (choice != 'n' && choice != 'N')
			{
				system("CLS");
				display();
				cin >> selection;
			}
		}
		else if (selection == 3)
		{
			bitwiseXor(p, q);
			getChoice();
			cin >> choice;
			if (choice != 'n' && choice != 'N')
			{
				system("CLS");
				display();
				cin >> selection;
			}
		}
		else if (selection == 4)
		{
			system("CLS");
			cout << "Enter New First Bit String: ";
			cin >> p;

			cout << "Enter New Second Bit String: ";
			cin >> q;
			system("CLS");
			display();
			cin >> selection;
		}
		else if (selection == 5)
		{
			system("CLS");
			bye();
			return 0;
		}
		else
		{
			system("CLS");
			invalid();
			display();
			cin >> selection;
		}
	} while (choice != 'n' && choice != 'N');
}